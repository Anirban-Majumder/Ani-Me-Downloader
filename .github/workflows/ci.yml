name: CI
on:
  pull_request:
  push:
    branches:
      - main  # update to match the default branch for your repo

# Cancel active CI runs for a PR before starting another run
concurrency:
  group: ${{ github.workflow}}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  FORCE_COLOR: "1"

defaults:
  run:
    shell: bash

jobs:
  ci:
    name: Test and Package
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        target: [ "Windows", "Ubuntu-24.04","Ubuntu-22.04"] #"Fedora-40", "macOS", "iOS", "Android"]
        include:
          - target: "Windows"
            output-format: "app"
            runs-on: "windows-latest"

          #- target: "macOS"
          #  output-format: "app"
          #  runs-on: "macos-latest"

          - target: "Ubuntu-24.04"
            platform: "Linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            pre-command: "sudo apt -y install socat"
            briefcase-run-prefix: "xvfb-run"
            briefcase-args: "--target ubuntu:24.04"

          - target: "Ubuntu-22.04"
            platform: "Linux"
            output-format: "system"
            runs-on: "ubuntu-latest"
            pre-command: "sudo apt -y install socat"
            briefcase-run-prefix: "xvfb-run"
            briefcase-args: "--target ubuntu:22.04"

          #- target: "Fedora-40"
          #  platform: "Linux"
          #  output-format: "system"
          #  runs-on: "ubuntu-latest"
          #  pre-command: "sudo apt -y install socat"
          #  briefcase-run-prefix: "xvfb-run"
          #  briefcase-args: "--target fedora:40"

          #- target: "iOS"
          #  output-format: "Xcode"
          #  runs-on: "macos-latest"
          #  briefcase-run-args: "--device 'iPhone SE (3rd generation)'"

          #- target: "Android"
          #  output-format: "Gradle"
          #  runs-on: "ubuntu-latest"
          #  pre-command: |
          #    # Enable KVM permissions for the emulator
          #    echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' \
          #      | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          #    sudo udevadm control --reload-rules
          #    sudo udevadm trigger --name-match=kvm
          #  briefcase-run-args: >-
          #    --device '{"avd":"beePhone"}'
          #    --shutdown-on-exit
          #    --Xemulator=-no-window
          #    --Xemulator=-no-snapshot
          #    --Xemulator=-no-audio
          #    --Xemulator=-no-boot-anim

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"  # update with your targeted Python version

      - name: Install Briefcase
        run: |
          python -m pip install -U pip setuptools wheel
          python -m pip install briefcase

      - name: Setup Environment
        run: |
          # Use GitHub's preinstalled JDK 17 for Android builds
          echo JAVA_HOME="${JAVA_HOME_17_X64:-$JAVA_HOME_17_arm64}" | tee -a ${GITHUB_ENV}
          ${{ matrix.pre-command }}

      - name: Build App
        run: |
          ${{ matrix.briefcase-build-prefix }} \
          briefcase build \
            ${{ matrix.platform || matrix.target }} \
            ${{ matrix.output-format }} \
            --test --no-input --log \
            ${{ matrix.briefcase-args }} \
            ${{ matrix.briefcase-build-args }}

      #- name: Test App
      #  run: |
      #    ${{ matrix.briefcase-run-prefix }} \
      #    briefcase run \
      #      ${{ matrix.platform || matrix.target }} \
      #      ${{ matrix.output-format }} \
      #      --test --no-input --log \
      #      ${{ matrix.briefcase-args }} \
      #      ${{ matrix.briefcase-run-args }}

      - name: Package App
        run: |
          ${{ matrix.briefcase-package-prefix }} \
          briefcase package \
            ${{ matrix.platform || matrix.target }} \
            ${{ matrix.output-format }} \
            --update --adhoc-sign --no-input --log \
            ${{ matrix.briefcase-args }} \
            ${{ matrix.briefcase-package-args }}

      - name: Upload App
        # Briefcase cannot create iOS artefacts; instead, apps
        # must be packaged and published for iOS through Xcode.
        if: matrix.target != 'iOS'
        uses: actions/upload-artifact@v4
        with:
          name: App-${{ matrix.target }}
          path: dist
          if-no-files-found: error

      - name: Upload Log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: Log-Failure-${{ matrix.target }}
          path: logs/*

  release:
    name: Create GitHub Release and Upload Artifacts
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get Commit Hash
        id: commit
        run: echo "commit_hash=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Ensure GitHub Release exists
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! gh release view "${{ env.commit_hash }}"; then
            gh release create "${{ env.commit_hash }}" \
              --title "Release ${{ env.commit_hash }}" \
              --notes "Automated release for commit ${{ env.commit_hash }}"
          else
            echo "Release already exists"
          fi

      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Upload Artifacts to Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release upload "${{ env.commit_hash }}" artifacts/**/* --clobber